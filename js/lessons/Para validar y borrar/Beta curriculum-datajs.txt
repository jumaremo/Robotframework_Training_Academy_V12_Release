/**
 * Robot Framework Academy - Curriculum Data Configuration
 * 251 Lecciones Pr√°cticas organizadas en 21 Secciones
 * Version: 2025.1-v13.1-Enhanced-PyCharm - ACTUALIZADO PARA PYCHARM
 */

const ROBOT_FRAMEWORK_CURRICULUM = {
    // Configuraci√≥n general de la academia - MEJORADA v13.1
    config: {
        academyName: "Robot Framework Academy",
        tagline: "251 Lecciones Pr√°cticas para QA Engineers",
        totalLessons: 251,
        totalSections: 21,
        version: "2025.1-v13.1-Enhanced-PyCharm", // ‚úÖ ACTUALIZADO PARA PYCHARM
        lastUpdated: "2025-07-29", // ‚úÖ ACTUALIZADO
        promptMaestroVersion: "v13.1", // ‚úÖ NUEVO: Versi√≥n sincronizada
        validatorVersion: "v13.1", // ‚úÖ NUEVO: Validador sincronizado
        generatorVersion: "v13.1", // ‚úÖ NUEVO: Generador sincronizado
        defaultLanguage: "es",
        supportedLanguages: ["es", "en"],
        
        // ‚úÖ NUEVO: Metadatos completos v13.1 SINCRONIZADOS
        v131Metadata: {
            // Ratios pr√°ctica incrementados v13.1 (MARGEN DE SEGURIDAD)
            practiceRatios: {
                'beginner-standard': 90,     // v13.1: 85% ‚Üí 90% (+5% margen)
                'beginner-foundation': 90,   // v13.1: 85% ‚Üí 90% (+5% margen L002)
                'beginner-integration': 92,  // v13.1: 90% ‚Üí 92% (+2% m√°ximo)
                'beginner-capstone': 85,     // v13.1: 80% ‚Üí 85% (+5% margen L001)
                'intermediate-standard': 85, // v13.1: 80% ‚Üí 85% (+5% consistente)
                'intermediate-integration': 90, // v13.1: 85% ‚Üí 90% (+5% t√©cnico)
                'advanced-standard': 82,     // v13.1: 75% ‚Üí 82% (+7% enterprise)
                'advanced-foundation': 82,   // v13.1: 75% ‚Üí 82% (+7% arquitectura)
                'advanced-capstone': 85      // v13.1: 80% ‚Üí 85% (+5% final)
            },
            
            // Variables RF obligatorias v13.1 (NUEVO)
            variableRequirements: {
                'beginner-standard': 5,      // \\\\${VAR} escapadas
                'beginner-foundation': 6,    // Foundation s√≥lida
                'beginner-integration': 8,   // Integraci√≥n pr√°ctica
                'beginner-capstone': 12,     // Proyecto comprehensivo
                'intermediate-standard': 7,  // T√©cnicas intermedias
                'intermediate-integration': 10, // Sistema integrado
                'advanced-standard': 8,      // Enterprise patterns
                'advanced-foundation': 10,   // Arquitectura enterprise
                'advanced-capstone': 15      // M√°ximo para proyectos finales
            },
            
            // L√≠neas RF incrementadas v13.1 (+5 l√≠neas sobre v13)
            rfLinesRequirements: {
                'beginner-standard': 30,     // v13: 26 ‚Üí v13.1: 30 (+4)
                'beginner-foundation': 35,   // v13: 30 ‚Üí v13.1: 35 (+5)
                'beginner-integration': 40,  // v13: 35 ‚Üí v13.1: 40 (+5)
                'beginner-capstone': 85,     // v13: 80 ‚Üí v13.1: 85 (+5)
                'intermediate-standard': 45, // v13: 40 ‚Üí v13.1: 45 (+5)
                'intermediate-integration': 65, // v13: 60 ‚Üí v13.1: 65 (+5)
                'advanced-standard': 55,     // v13: 50 ‚Üí v13.1: 55 (+5)
                'advanced-foundation': 65,   // v13: 60 ‚Üí v13.1: 65 (+5)
                'advanced-capstone': 85      // v13: 80 ‚Üí v13.1: 85 (+5)
            },
            
            // Comandos incrementados v13.1 (+5 comandos sobre v13)
            commandsRequirements: {
                'beginner-standard': 20,     // v13: 15 ‚Üí v13.1: 20 (+5)
                'beginner-foundation': 22,   // v13: 18 ‚Üí v13.1: 22 (+4)
                'beginner-integration': 25,  // v13: 20 ‚Üí v13.1: 25 (+5)
                'beginner-capstone': 45,     // v13: 40 ‚Üí v13.1: 45 (+5)
                'intermediate-standard': 25, // v13: 20 ‚Üí v13.1: 25 (+5)
                'intermediate-integration': 35, // v13: 30 ‚Üí v13.1: 35 (+5)
                'advanced-standard': 30,     // v13: 25 ‚Üí v13.1: 30 (+5)
                'advanced-foundation': 35,   // v13: 30 ‚Üí v13.1: 35 (+5)
                'advanced-capstone': 45      // v13: 40 ‚Üí v13.1: 45 (+5)
            },
            
            // Content blocks por nivel v13.1
            contentBlocksRequirements: {
                'beginner': 6,     // intro, code-example, exercise, troubleshooting, concept, next-steps
                'intermediate': 7, // + best-practices
                'advanced': 8      // + checklist
            },
            
            // Headers anti-teor√≠a v13.1 (REFORZADO)
            maxHeaderWords: 5,  // v13: 6 ‚Üí v13.1: 5 palabras m√°ximo
            
            // Exercise steps m√≠nimos por tipo v13.1
            exerciseStepsRequirements: {
                'beginner-standard': 3,
                'beginner-foundation': 3,
                'beginner-integration': 4,
                'beginner-capstone': 6,
                'intermediate-standard': 4,
                'intermediate-integration': 5,
                'advanced-standard': 5,
                'advanced-foundation': 5,
                'advanced-capstone': 6
            },
            
            // Scores objetivo por tipo v13.1
            targetScores: {
                'beginner-standard': 95,
                'beginner-foundation': 95,
                'beginner-integration': 95,
                'beginner-capstone': 85,
                'intermediate-standard': 90,
                'intermediate-integration': 90,
                'advanced-standard': 85,
                'advanced-foundation': 85,
                'advanced-capstone': 85
            }
        },
        
        // Duraciones optimizadas (YA PERFECTAS, se mantienen)
        baseDurations: {
            beginner: "5 min",
            intermediate: "7 min", 
            advanced: "10 min"
        },
        specialDurations: {
            beginner_foundation: "8 min",
            beginner_integration: "10 min",
            intermediate_foundation: "10 min",
            intermediate_integration: "15 min",
            advanced_foundation: "15 min",
            advanced_capstone: "20-25 min"
        }
    },

    // Definici√≥n de niveles de dificultad (MANTENER EXISTENTE)
    levels: {
        beginner: {
            id: "beginner",
            name: "B√°sico",
            icon: "üü¢",
            color: "#38a169",
            description: "Fundamentos de Robot Framework y QA automation",
            lessons: "001-066",
            baseDuration: "5 min",
            specialDurations: {
                foundation: "8 min",
                integration: "10 min"
            }
        },
        intermediate: {
            id: "intermediate", 
            name: "Intermedio",
            icon: "üü°",
            color: "#ed8936",
            description: "T√©cnicas avanzadas y patrones de automation",
            lessons: "067-189",
            baseDuration: "7 min",
            specialDurations: {
                foundation: "10 min",
                integration: "15 min"
            }
        },
        advanced: {
            id: "advanced",
            name: "Avanzado", 
            icon: "üî¥",
            color: "#e53e3e",
            description: "Enterprise patterns y arquitecturas complejas",
            lessons: "190-251",
            baseDuration: "10 min",
            specialDurations: {
                foundation: "15 min",
                capstone: "20-25 min"
            }
        }
    },

    // Configuraci√≥n de las 21 secciones principales (ACTUALIZADO PARA PYCHARM)
    sections: {
        // ===== NIVEL B√ÅSICO (Secciones 1-6) =====
        'section-01': {
            id: 1,
            title: 'Configuraci√≥n del Entorno de Desarrollo',
            level: 'beginner',
            totalLessons: 15,
            estimatedHours: 2.0, // Actualizado
            status: 'available',
            description: 'Setup completo del entorno Robot Framework desde cero',
            icon: '‚öôÔ∏è',
            order: 1,
            lessons: [
                { id: 1, title: 'Introducci√≥n a Robot Framework', duration: '8 min', hasCode: true, hasExercise: false, topics: ['introducci√≥n', 'fundamentos'], type: 'foundation' },
                { id: 2, title: 'Instalaci√≥n de Python y Robot Framework', duration: '8 min', hasCode: true, hasExercise: true, topics: ['instalaci√≥n', 'python', 'setup'], type: 'foundation' },
                { id: 3, title: 'Configuraci√≥n de PyCharm', duration: '5 min', hasCode: false, hasExercise: true, topics: ['pycharm', 'ide', 'configuraci√≥n'] },
                { id: 4, title: 'Plugins esenciales para PyCharm', duration: '5 min', hasCode: false, hasExercise: false, topics: ['plugins', 'productividad'] },
                { id: 5, title: 'Creaci√≥n del primer proyecto', duration: '8 min', hasCode: true, hasExercise: true, topics: ['proyecto', 'estructura', 'pycharm'], type: 'foundation' },
                { id: 6, title: 'Estructura de directorios y buenas pr√°cticas', duration: '5 min', hasCode: false, hasExercise: false, topics: ['estructura', 'buenas-pr√°cticas'] },
                { id: 7, title: 'Configuraci√≥n del navegador web', duration: '5 min', hasCode: true, hasExercise: true, topics: ['selenium', 'browser', 'webdriver'] },
                { id: 8, title: 'WebDrivers y gesti√≥n de dependencias', duration: '8 min', hasCode: true, hasExercise: true, topics: ['webdriver', 'dependencies', 'troubleshooting'], type: 'foundation' },
                { id: 9, title: 'Variables de entorno y configuraci√≥n', duration: '5 min', hasCode: true, hasExercise: false, topics: ['variables', 'environment', 'config'] },
                { id: 10, title: 'Debugging y herramientas de desarrollo', duration: '5 min', hasCode: true, hasExercise: true, topics: ['debugging', 'development', 'tools'] },
                { id: 11, title: 'Git y TortoiseGit para QA Engineers', duration: '8 min', hasCode: true, hasExercise: true, topics: ['git', 'tortoisegit', 'version-control', 'qa-automation', 'diff-commit-push'], type: 'foundation' },
                { id: 12, title: 'Configuraci√≥n de requirements.txt', duration: '5 min', hasCode: true, hasExercise: false, topics: ['requirements', 'dependencies', 'pip'] },
                { id: 13, title: 'Ejecuci√≥n de pruebas desde l√≠nea de comandos', duration: '5 min', hasCode: true, hasExercise: true, topics: ['command-line', 'execution', 'cli'] },
                { id: 14, title: 'Generaci√≥n de reportes b√°sicos', duration: '5 min', hasCode: false, hasExercise: false, topics: ['reports', 'documentation', 'html'] },
                { id: 15, title: 'Troubleshooting de instalaci√≥n com√∫n', duration: '8 min', hasCode: true, hasExercise: true, topics: ['troubleshooting', 'problems', 'solutions'], type: 'foundation' }
            ]
        },

        'section-02': {
            id: 2,
            title: 'Fundamentos de Robot Framework',
            level: 'beginner',
            totalLessons: 15,
            estimatedHours: 1.7, // Actualizado
            status: 'available',
            description: 'Sintaxis b√°sica, keywords y estructura de tests',
            icon: 'ü§ñ',
            order: 2,
            lessons: [
                { id: 16, title: 'Sintaxis b√°sica de Robot Framework', duration: '8 min', hasCode: true, hasExercise: true, topics: ['syntax', 'basics', 'structure'], type: 'foundation' },
                { id: 17, title: 'Test Cases y Test Suites', duration: '5 min', hasCode: true, hasExercise: true, topics: ['test-cases', 'test-suites', 'organization'] },
                { id: 18, title: 'Keywords built-in m√°s importantes', duration: '5 min', hasCode: true, hasExercise: true, topics: ['keywords', 'built-in', 'library'] },
                { id: 19, title: 'Documentaci√≥n de tests', duration: '5 min', hasCode: true, hasExercise: false, topics: ['documentation', 'comments', 'metadata'] },
                { id: 20, title: 'Tags y organizaci√≥n de pruebas', duration: '5 min', hasCode: true, hasExercise: true, topics: ['tags', 'organization', 'filtering'] },
                { id: 21, title: 'Setup y Teardown', duration: '5 min', hasCode: true, hasExercise: true, topics: ['setup', 'teardown', 'lifecycle'] },
                { id: 22, title: 'Manejo de fallos y excepciones', duration: '5 min', hasCode: true, hasExercise: true, topics: ['exceptions', 'error-handling', 'failure'] },
                { id: 23, title: 'Logging y mensajes de debug', duration: '5 min', hasCode: true, hasExercise: true, topics: ['logging', 'debug', 'output'] },
                { id: 24, title: 'Timeouts y esperas', duration: '5 min', hasCode: true, hasExercise: true, topics: ['timeout', 'wait', 'timing'] },
                { id: 25, title: 'Primer test completo', duration: '5 min', hasCode: true, hasExercise: true, topics: ['complete-test', 'integration', 'practice'] },
                { id: 26, title: 'Ejecuci√≥n y an√°lisis de resultados', duration: '5 min', hasCode: false, hasExercise: true, topics: ['execution', 'results', 'analysis'] },
                { id: 27, title: 'Buenas pr√°cticas en nomenclatura', duration: '5 min', hasCode: false, hasExercise: false, topics: ['naming', 'conventions', 'best-practices'] },
                { id: 28, title: 'Estructura de proyectos medianos', duration: '5 min', hasCode: true, hasExercise: true, topics: ['project-structure', 'scaling', 'organization'] },
                { id: 29, title: 'Patrones comunes de testing', duration: '5 min', hasCode: true, hasExercise: true, topics: ['patterns', 'common-practices', 'templates'] },
                { id: 30, title: 'Ejercicio integrador b√°sico', duration: '10 min', hasCode: true, hasExercise: true, topics: ['integration', 'exercise', 'practice'], type: 'integration' }
            ]
        },

        'section-03': {
            id: 3,
            title: 'Variables y Datos',
            level: 'beginner',
            totalLessons: 12,
            estimatedHours: 1.2, // Actualizado
            status: 'available',
            description: 'Manejo de variables, datos y configuraciones',
            icon: 'üìä',
            order: 3,
            lessons: [
                { id: 31, title: 'Variables escalares b√°sicas', duration: '5 min', hasCode: true, hasExercise: true, topics: ['variables', 'scalar', 'basics'] },
                { id: 32, title: 'Variables de lista y diccionario', duration: '5 min', hasCode: true, hasExercise: true, topics: ['list', 'dictionary', 'collections'] },
                { id: 33, title: 'Variables de entorno', duration: '5 min', hasCode: true, hasExercise: true, topics: ['environment', 'env-vars', 'configuration'] },
                { id: 34, title: 'Archivos de variables YAML/JSON', duration: '5 min', hasCode: true, hasExercise: true, topics: ['yaml', 'json', 'data-files'] },
                { id: 35, title: 'Variables din√°micas con Python', duration: '5 min', hasCode: true, hasExercise: true, topics: ['dynamic', 'python', 'runtime'] },
                { id: 36, title: 'Scoping y visibilidad de variables', duration: '5 min', hasCode: true, hasExercise: true, topics: ['scope', 'visibility', 'context'] },
                { id: 37, title: 'Manipulaci√≥n de strings', duration: '5 min', hasCode: true, hasExercise: true, topics: ['strings', 'manipulation', 'text'] },
                { id: 38, title: 'Operaciones con n√∫meros y fechas', duration: '5 min', hasCode: true, hasExercise: true, topics: ['numbers', 'dates', 'math'] },
                { id: 39, title: 'Variables globales y de suite', duration: '5 min', hasCode: true, hasExercise: true, topics: ['global', 'suite', 'shared'] },
                { id: 40, title: 'Configuraci√≥n por ambientes', duration: '5 min', hasCode: true, hasExercise: true, topics: ['environments', 'config', 'deployment'] },
                { id: 41, title: 'Secrets y datos sensibles', duration: '5 min', hasCode: true, hasExercise: true, topics: ['secrets', 'security', 'credentials'] },
                { id: 42, title: 'Proyecto: Sistema de configuraci√≥n', duration: '10 min', hasCode: true, hasExercise: true, topics: ['project', 'configuration', 'system'], type: 'integration' }
            ]
        },

        'section-04': {
            id: 4,
            title: 'Keywords Personalizados',
            level: 'beginner',
            totalLessons: 12,
            estimatedHours: 1.2, // Actualizado
            status: 'available',
            description: 'Creaci√≥n y gesti√≥n de keywords reutilizables',
            icon: 'üîë',
            order: 4,
            lessons: [
                { id: 43, title: 'Conceptos de keywords personalizados', duration: '5 min', hasCode: true, hasExercise: false, topics: ['keywords', 'custom', 'concepts'] },
                { id: 44, title: 'Creaci√≥n de keywords simples', duration: '5 min', hasCode: true, hasExercise: true, topics: ['creation', 'simple', 'basic'] },
                { id: 45, title: 'Keywords con argumentos', duration: '5 min', hasCode: true, hasExercise: true, topics: ['arguments', 'parameters', 'input'] },
                { id: 46, title: 'Valores de retorno', duration: '5 min', hasCode: true, hasExercise: true, topics: ['return', 'output', 'values'] },
                { id: 47, title: 'Keywords con argumentos opcionales', duration: '5 min', hasCode: true, hasExercise: true, topics: ['optional', 'default', 'flexibility'] },
                { id: 48, title: 'Documentaci√≥n de keywords', duration: '5 min', hasCode: true, hasExercise: false, topics: ['documentation', 'help', 'usage'] },
                { id: 49, title: 'Keywords embebidos (embedded)', duration: '5 min', hasCode: true, hasExercise: true, topics: ['embedded', 'natural', 'language'] },
                { id: 50, title: 'Organizaci√≥n en archivos Resource', duration: '5 min', hasCode: true, hasExercise: true, topics: ['resource', 'organization', 'files'] },
                { id: 51, title: 'Importaci√≥n y namespace', duration: '5 min', hasCode: true, hasExercise: true, topics: ['import', 'namespace', 'modules'] },
                { id: 52, title: 'Keywords de alto nivel vs bajo nivel', duration: '5 min', hasCode: true, hasExercise: true, topics: ['abstraction', 'levels', 'design'] },
                { id: 53, title: 'Refactoring de keywords', duration: '5 min', hasCode: true, hasExercise: true, topics: ['refactoring', 'maintenance', 'improvement'] },
                { id: 54, title: 'Biblioteca de keywords del proyecto', duration: '10 min', hasCode: true, hasExercise: true, topics: ['library', 'project', 'collection'], type: 'integration' }
            ]
        },

        'section-05': {
            id: 5,
            title: 'Control de Flujo',
            level: 'beginner',
            totalLessons: 12,
            estimatedHours: 1.2, // Actualizado
            status: 'available',
            description: 'Estructuras condicionales, loops e iteraciones',
            icon: 'üîÄ',
            order: 5,
            lessons: [
                { id: 55, title: 'Condicionales IF/ELSE', duration: '5 min', hasCode: true, hasExercise: true, topics: ['if', 'else', 'conditionals'] },
                { id: 56, title: 'Operadores de comparaci√≥n', duration: '5 min', hasCode: true, hasExercise: true, topics: ['operators', 'comparison', 'logic'] },
                { id: 57, title: 'Loops FOR b√°sicos', duration: '5 min', hasCode: true, hasExercise: true, topics: ['for', 'loops', 'iteration'] },
                { id: 58, title: 'FOR con listas y rangos', duration: '5 min', hasCode: true, hasExercise: true, topics: ['lists', 'ranges', 'collections'] },
                { id: 59, title: 'FOR con diccionarios', duration: '5 min', hasCode: true, hasExercise: true, topics: ['dictionaries', 'key-value', 'iteration'] },
                { id: 60, title: 'WHILE loops', duration: '5 min', hasCode: true, hasExercise: true, topics: ['while', 'conditional-loops', 'dynamic'] },
                { id: 61, title: 'Control de loops: BREAK y CONTINUE', duration: '5 min', hasCode: true, hasExercise: true, topics: ['break', 'continue', 'control'] },
                { id: 62, title: 'TRY/EXCEPT para manejo de errores', duration: '5 min', hasCode: true, hasExercise: true, topics: ['try', 'except', 'error-handling'] },
                { id: 63, title: 'Combinando estructuras de control', duration: '5 min', hasCode: true, hasExercise: true, topics: ['combination', 'nesting', 'complex'] },
                { id: 64, title: 'Patrones comunes de control de flujo', duration: '5 min', hasCode: true, hasExercise: true, topics: ['patterns', 'common', 'best-practices'] },
                { id: 65, title: 'Debugging de l√≥gica compleja', duration: '5 min', hasCode: true, hasExercise: true, topics: ['debugging', 'complex', 'troubleshooting'] },
                { id: 66, title: 'Ejercicio: Algoritmo de validaci√≥n', duration: '10 min', hasCode: true, hasExercise: true, topics: ['algorithm', 'validation', 'exercise'], type: 'integration' }
            ]
        },

        // ===== NIVEL INTERMEDIO (Secciones 7-14) =====
        'section-06': {
            id: 6,
            title: 'SeleniumLibrary Fundamentos',
            level: 'intermediate',
            totalLessons: 18,
            estimatedHours: 2.5, // Actualizado
            status: 'development',
            description: 'Automatizaci√≥n web con Selenium',
            icon: 'üåê',
            order: 6,
            lessons: [
                { id: 67, title: 'Introducci√≥n a SeleniumLibrary', duration: '10 min', hasCode: true, hasExercise: true, topics: ['selenium', 'web', 'automation'], type: 'foundation' },
                ...Array.from({length: 16}, (_, i) => ({
                    id: 68 + i,
                    title: `Selenium Fundamentals ${String(68 + i).padStart(3, '0')}`,
                    duration: '7 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['selenium', 'web', 'automation']
                })),
                { id: 84, title: 'Proyecto web automation completo', duration: '15 min', hasCode: true, hasExercise: true, topics: ['selenium', 'project', 'integration'], type: 'integration' }
            ]
        },

        'section-07': {
            id: 7,
            title: 'Localizadores y Selectores',
            level: 'intermediate',
            totalLessons: 15,
            estimatedHours: 2.0, // Actualizado
            status: 'development',
            description: 'CSS, XPath y estrategias de localizaci√≥n',
            icon: 'üéØ',
            order: 7,
            lessons: [
                { id: 85, title: 'Fundamentos de CSS Selectors', duration: '10 min', hasCode: true, hasExercise: true, topics: ['locators', 'css', 'xpath'], type: 'foundation' },
                ...Array.from({length: 13}, (_, i) => ({
                    id: 86 + i,
                    title: `Localizadores Avanzados ${String(86 + i).padStart(3, '0')}`,
                    duration: '7 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['locators', 'css', 'xpath']
                })),
                { id: 99, title: 'Proyecto: Localizadores robustos', duration: '15 min', hasCode: true, hasExercise: true, topics: ['locators', 'project'], type: 'integration' }
            ]
        },

        'section-08': {
            id: 8,
            title: 'Interacciones Web Avanzadas',
            level: 'intermediate',
            totalLessons: 20,
            estimatedHours: 2.8, // Actualizado
            status: 'development',
            description: 'JavaScript, uploads, downloads, etc.',
            icon: '‚ö°',
            order: 8,
            lessons: [
                { id: 100, title: 'JavaScript execution', duration: '10 min', hasCode: true, hasExercise: true, topics: ['advanced', 'javascript', 'files'], type: 'foundation' },
                ...Array.from({length: 18}, (_, i) => ({
                    id: 101 + i,
                    title: `Interacciones Avanzadas ${String(101 + i).padStart(3, '0')}`,
                    duration: '7 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['advanced', 'javascript', 'files']
                })),
                { id: 119, title: 'Proyecto web automation completo', duration: '15 min', hasCode: true, hasExercise: true, topics: ['advanced', 'project'], type: 'integration' }
            ]
        },

        'section-09': {
            id: 9,
            title: 'API Testing',
            level: 'intermediate',
            totalLessons: 15,
            estimatedHours: 2.3, // Actualizado
            status: 'development',
            description: 'REST APIs, JSON, autenticaci√≥n',
            icon: 'üîå',
            order: 9,
            lessons: [
                { id: 120, title: 'Introducci√≥n a API Testing', duration: '10 min', hasCode: true, hasExercise: true, topics: ['api', 'rest', 'json'], type: 'foundation' },
                ...Array.from({length: 13}, (_, i) => ({
                    id: 121 + i,
                    title: `API Testing ${String(121 + i).padStart(3, '0')}`,
                    duration: '7 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['api', 'rest', 'json']
                })),
                { id: 134, title: 'API testing project', duration: '15 min', hasCode: true, hasExercise: true, topics: ['api', 'project'], type: 'integration' }
            ]
        },

        'section-10': {
            id: 10,
            title: 'Database Testing',
            level: 'intermediate',
            totalLessons: 12,
            estimatedHours: 1.9, // Actualizado
            status: 'development',
            description: 'SQL, NoSQL, validaci√≥n de datos',
            icon: 'üóÑÔ∏è',
            order: 10,
            lessons: [
                { id: 135, title: 'Fundamentos de Database Testing', duration: '10 min', hasCode: true, hasExercise: true, topics: ['database', 'sql', 'nosql'], type: 'foundation' },
                ...Array.from({length: 10}, (_, i) => ({
                    id: 136 + i,
                    title: `Database Testing ${String(136 + i).padStart(3, '0')}`,
                    duration: '7 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['database', 'sql', 'nosql']
                })),
                { id: 146, title: 'Database testing project', duration: '15 min', hasCode: true, hasExercise: true, topics: ['database', 'project'], type: 'integration' }
            ]
        },

        'section-11': {
            id: 11,
            title: 'Data-Driven Testing',
            level: 'intermediate',
            totalLessons: 10,
            estimatedHours: 1.5, // Actualizado
            status: 'development',
            description: 'Excel, CSV, parametrizaci√≥n',
            icon: 'üìà',
            order: 11,
            lessons: [
                { id: 147, title: 'Data-Driven Testing concepts', duration: '10 min', hasCode: true, hasExercise: true, topics: ['data-driven', 'excel', 'csv'], type: 'foundation' },
                ...Array.from({length: 8}, (_, i) => ({
                    id: 148 + i,
                    title: `Data-Driven ${String(148 + i).padStart(3, '0')}`,
                    duration: '7 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['data-driven', 'excel', 'csv']
                })),
                { id: 156, title: 'Data-driven project', duration: '15 min', hasCode: true, hasExercise: true, topics: ['data-driven', 'project'], type: 'integration' }
            ]
        },

        'section-12': {
            id: 12,
            title: 'Mobile Testing',
            level: 'intermediate',
            totalLessons: 12,
            estimatedHours: 2.1, // Actualizado
            status: 'development',
            description: 'Appium, Android, iOS',
            icon: 'üì±',
            order: 12,
            lessons: [
                { id: 157, title: 'Mobile Testing introduction', duration: '10 min', hasCode: true, hasExercise: true, topics: ['mobile', 'appium', 'android', 'ios'], type: 'foundation' },
                ...Array.from({length: 10}, (_, i) => ({
                    id: 158 + i,
                    title: `Mobile Testing ${String(158 + i).padStart(3, '0')}`,
                    duration: '7 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['mobile', 'appium', 'android', 'ios']
                })),
                { id: 168, title: 'Mobile app testing project', duration: '15 min', hasCode: true, hasExercise: true, topics: ['mobile', 'project'], type: 'integration' }
            ]
        },

        'section-13': {
            id: 13,
            title: 'Librer√≠as Python Personalizadas',
            level: 'intermediate',
            totalLessons: 15,
            estimatedHours: 2.4, // Actualizado
            status: 'development',
            description: 'Extensi√≥n con Python puro',
            icon: 'üêç',
            order: 13,
            lessons: [
                { id: 169, title: 'Python Libraries development', duration: '10 min', hasCode: true, hasExercise: true, topics: ['python', 'libraries', 'custom'], type: 'foundation' },
                ...Array.from({length: 13}, (_, i) => ({
                    id: 170 + i,
                    title: `Python Libraries ${String(170 + i).padStart(3, '0')}`,
                    duration: '7 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['python', 'libraries', 'custom']
                })),
                { id: 183, title: 'Custom library project', duration: '15 min', hasCode: true, hasExercise: true, topics: ['python', 'project'], type: 'integration' }
            ]
        },

        'section-14': {
            id: 14,
            title: 'Reporting y Analytics',
            level: 'intermediate',
            totalLessons: 6,
            estimatedHours: 1.3, // Actualizado
            status: 'development',
            description: 'Reportes avanzados y m√©tricas',
            icon: 'üìä',
            order: 14,
            lessons: [
                { id: 184, title: 'Advanced reporting concepts', duration: '10 min', hasCode: true, hasExercise: true, topics: ['reporting', 'analytics', 'metrics'], type: 'foundation' },
                ...Array.from({length: 4}, (_, i) => ({
                    id: 185 + i,
                    title: `Reporting ${String(185 + i).padStart(3, '0')}`,
                    duration: '7 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['reporting', 'analytics', 'metrics']
                })),
                { id: 189, title: 'Reporting dashboard project', duration: '15 min', hasCode: true, hasExercise: true, topics: ['reporting', 'project'], type: 'integration' }
            ]
        },

        // ===== NIVEL AVANZADO (Secciones 15-21) =====
        'section-15': {
            id: 15,
            title: 'CI/CD Integration',
            level: 'advanced',
            totalLessons: 12,
            estimatedHours: 2.2, // Actualizado
            status: 'development',
            description: 'Jenkins, GitHub Actions, Docker',
            icon: 'üöÄ',
            order: 15,
            lessons: [
                { id: 190, title: 'CI/CD Concepts', duration: '15 min', hasCode: true, hasExercise: true, topics: ['cicd', 'jenkins', 'docker'], type: 'foundation' },
                ...Array.from({length: 10}, (_, i) => ({
                    id: 191 + i,
                    title: `CI/CD ${String(191 + i).padStart(3, '0')}`,
                    duration: '10 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['cicd', 'jenkins', 'docker']
                })),
                { id: 201, title: 'CI/CD pipeline project', duration: '20 min', hasCode: true, hasExercise: true, topics: ['cicd', 'project'], type: 'capstone' }
            ]
        },

        'section-16': {
            id: 16,
            title: 'Performance Testing',
            level: 'advanced',
            totalLessons: 10,
            estimatedHours: 1.9, // Actualizado
            status: 'development',
            description: 'Load testing, m√©tricas, optimizaci√≥n',
            icon: '‚ö°',
            order: 16,
            lessons: [
                { id: 202, title: 'Performance testing fundamentals', duration: '15 min', hasCode: true, hasExercise: true, topics: ['performance', 'load', 'metrics'], type: 'foundation' },
                ...Array.from({length: 8}, (_, i) => ({
                    id: 203 + i,
                    title: `Performance ${String(203 + i).padStart(3, '0')}`,
                    duration: '10 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['performance', 'load', 'metrics']
                })),
                { id: 211, title: 'Performance testing project', duration: '20 min', hasCode: true, hasExercise: true, topics: ['performance', 'project'], type: 'capstone' }
            ]
        },

        'section-17': {
            id: 17,
            title: 'Security Testing',
            level: 'advanced',
            totalLessons: 8,
            estimatedHours: 1.7, // Actualizado
            status: 'development',
            description: 'Vulnerabilidades, penetration testing',
            icon: 'üîí',
            order: 17,
            lessons: [
                { id: 212, title: 'Security testing introduction', duration: '15 min', hasCode: true, hasExercise: true, topics: ['security', 'vulnerabilities', 'pentesting'], type: 'foundation' },
                ...Array.from({length: 6}, (_, i) => ({
                    id: 213 + i,
                    title: `Security ${String(213 + i).padStart(3, '0')}`,
                    duration: '10 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['security', 'vulnerabilities', 'pentesting']
                })),
                { id: 219, title: 'Security testing project', duration: '20 min', hasCode: true, hasExercise: true, topics: ['security', 'project'], type: 'capstone' }
            ]
        },

        'section-18': {
            id: 18,
            title: 'Arquitecturas Enterprise',
            level: 'advanced',
            totalLessons: 10,
            estimatedHours: 2.0, // Actualizado
            status: 'development',
            description: 'Patrones escalables, microservicios',
            icon: 'üè¢',
            order: 18,
            lessons: [
                { id: 220, title: 'Enterprise architecture patterns', duration: '15 min', hasCode: true, hasExercise: true, topics: ['enterprise', 'architecture', 'scalability'], type: 'foundation' },
                ...Array.from({length: 8}, (_, i) => ({
                    id: 221 + i,
                    title: `Enterprise ${String(221 + i).padStart(3, '0')}`,
                    duration: '10 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['enterprise', 'architecture', 'scalability']
                })),
                { id: 229, title: 'Enterprise architecture project', duration: '20 min', hasCode: true, hasExercise: true, topics: ['enterprise', 'project'], type: 'capstone' }
            ]
        },

        'section-19': {
            id: 19,
            title: 'Listeners y Extensions',
            level: 'advanced',
            totalLessons: 8,
            estimatedHours: 1.5, // Actualizado
            status: 'development',
            description: 'Hooks, extensiones, customizaci√≥n',
            icon: 'üîß',
            order: 19,
            lessons: [
                { id: 230, title: 'Listeners and extensions', duration: '15 min', hasCode: true, hasExercise: true, topics: ['listeners', 'extensions', 'hooks'], type: 'foundation' },
                ...Array.from({length: 6}, (_, i) => ({
                    id: 231 + i,
                    title: `Extensions ${String(231 + i).padStart(3, '0')}`,
                    duration: '10 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['listeners', 'extensions', 'hooks']
                })),
                { id: 237, title: 'Extensions development project', duration: '20 min', hasCode: true, hasExercise: true, topics: ['extensions', 'project'], type: 'capstone' }
            ]
        },

        'section-20': {
            id: 20,
            title: 'Best Practices y Patrones',
            level: 'advanced',
            totalLessons: 8,
            estimatedHours: 1.5, // Actualizado
            status: 'development',
            description: 'Metodolog√≠as, est√°ndares, calidad',
            icon: '‚≠ê',
            order: 20,
            lessons: [
                { id: 238, title: 'Best practices methodology', duration: '15 min', hasCode: true, hasExercise: true, topics: ['best-practices', 'patterns', 'quality'], type: 'foundation' },
                ...Array.from({length: 6}, (_, i) => ({
                    id: 239 + i,
                    title: `Best Practices ${String(239 + i).padStart(3, '0')}`,
                    duration: '10 min',
                    hasCode: true,
                    hasExercise: true,
                    topics: ['best-practices', 'patterns', 'quality']
                })),
                { id: 245, title: 'Best practices implementation project', duration: '20 min', hasCode: true, hasExercise: true, topics: ['best-practices', 'project'], type: 'capstone' }
            ]
        },

        'section-21': {
            id: 21,
            title: 'Proyectos Capstone',
            level: 'advanced',
            totalLessons: 6, // Ajustado
            estimatedHours: 2.3, // Actualizado
            status: 'development',
            description: 'Proyectos finales integradores',
            icon: 'üéì',
            order: 21,
            lessons: [
                { id: 246, title: 'E-commerce testing suite', duration: '20 min', hasCode: true, hasExercise: true, topics: ['capstone', 'integration', 'final-project'], type: 'capstone' },
                { id: 247, title: 'API microservices testing', duration: '20 min', hasCode: true, hasExercise: true, topics: ['capstone', 'api', 'microservices'], type: 'capstone' },
                { id: 248, title: 'Mobile + Web integration', duration: '20 min', hasCode: true, hasExercise: true, topics: ['capstone', 'mobile', 'web'], type: 'capstone' },
                { id: 249, title: 'Enterprise CI/CD pipeline', duration: '20 min', hasCode: true, hasExercise: true, topics: ['capstone', 'cicd', 'enterprise'], type: 'capstone' },
                { id: 250, title: 'Performance + Security testing', duration: '20 min', hasCode: true, hasExercise: true, topics: ['capstone', 'performance', 'security'], type: 'capstone' },
                { id: 251, title: 'QA Automation Certification Project', duration: '25 min', hasCode: true, hasExercise: true, topics: ['capstone', 'certification', 'final'], type: 'capstone' }
            ]
        }
    },

    // Topics globales para filtering y b√∫squeda (ACTUALIZADO PARA PYCHARM + TORTOISEGIT + QA)
    topics: [
        'setup', 'installation', 'syntax', 'selenium', 'web-testing', 'selectors', 
        'css', 'xpath', 'python', 'libraries', 'keywords', 'variables', 'data-driven',
        'excel', 'database', 'mysql', 'api-testing', 'jenkins', 'ci-cd', 'reporting',
        'debugging', 'performance', 'best-practices', 'troubleshooting', 'advanced',
        'mobile', 'appium', 'security', 'enterprise', 'patterns', 'integration',
        'pycharm', 'plugins', 'git', 'tortoisegit', 'qa-automation', 'diff-commit-push' // ‚úÖ NUEVOS TOPICS PARA QA GIT WORKFLOW
    ],

    // ‚úÖ FUNCIONES UTILITY MEJORADAS v13.1
    utils: {
        /**
         * Obtiene duraci√≥n sugerida basada en nivel y tipo (MANTENER)
         */
        getSuggestedDuration(level, type = 'standard') {
            const config = ROBOT_FRAMEWORK_CURRICULUM.config;
            
            if (type === 'foundation') {
                return config.specialDurations[`${level}_foundation`];
            }
            
            if (type === 'integration') {
                return config.specialDurations[`${level}_integration`];
            }
            
            if (type === 'capstone') {
                return config.specialDurations[`${level}_capstone`];
            }
            
            return config.baseDurations[level];
        },

        /**
         * Obtiene una secci√≥n por su ID (MANTENER)
         */
        getSectionById(sectionId) {
            return ROBOT_FRAMEWORK_CURRICULUM.sections[sectionId] || null;
        },

        /**
         * Obtiene una lecci√≥n por su ID num√©rico (MANTENER)
         */
        getLessonById(lessonId) {
            const curriculum = ROBOT_FRAMEWORK_CURRICULUM;
            for (const [sectionKey, section] of Object.entries(curriculum.sections)) {
                const lesson = section.lessons.find(l => l.id === lessonId);
                if (lesson) {
                    return {
                        ...lesson,
                        sectionId: sectionKey,
                        sectionTitle: section.title,
                        sectionLevel: section.level,
                        sectionIcon: section.icon
                    };
                }
            }
            return null;
        },

        /**
         * Obtiene todas las secciones filtradas por nivel (MANTENER)
         */
        getSectionsByLevel(level) {
            return Object.values(ROBOT_FRAMEWORK_CURRICULUM.sections)
                .filter(section => section.level === level)
                .sort((a, b) => a.order - b.order);
        },

        /**
         * Calcula estad√≠sticas de duraci√≥n optimizada (MANTENER)
         */
        getDurationStats() {
            const curriculum = ROBOT_FRAMEWORK_CURRICULUM;
            const stats = {
                beginner: { total: 0, lessons: 0, avgDuration: 0 },
                intermediate: { total: 0, lessons: 0, avgDuration: 0 },
                advanced: { total: 0, lessons: 0, avgDuration: 0 }
            };
            
            Object.values(curriculum.sections).forEach(section => {
                const level = section.level;
                const estimatedMinutes = section.estimatedHours * 60;
                
                stats[level].total += estimatedMinutes;
                stats[level].lessons += section.totalLessons;
            });
            
            // Calcular promedios
            Object.keys(stats).forEach(level => {
                if (stats[level].lessons > 0) {
                    stats[level].avgDuration = Math.round(stats[level].total / stats[level].lessons);
                }
            });
            
            return stats;
        },

        /**
         * Calcula estad√≠sticas de progreso (MANTENER)
         */
        getProgressStats(completedLessons) {
            const curriculum = ROBOT_FRAMEWORK_CURRICULUM;
            const totalLessons = curriculum.config.totalLessons;
            const completed = completedLessons.length;
            const percentage = totalLessons > 0 ? Math.round((completed / totalLessons) * 100) : 0;
            
            // Calcular por niveles
            const levels = {
                beginner: completedLessons.filter(id => id >= 1 && id <= 66).length,
                intermediate: completedLessons.filter(id => id >= 67 && id <= 189).length,
                advanced: completedLessons.filter(id => id >= 190 && id <= 251).length
            };
            
            return {
                completed,
                total: totalLessons,
                percentage,
                levels
            };
        },

        /**
         * Funci√≥n de b√∫squeda de lecciones (ACTUALIZADA PARA PYCHARM)
         */
        searchLessons(query) {
            if (!query || query.trim().length < 1) {
                return [];
            }
            
            const results = [];
            const queryLower = query.toLowerCase().trim();
            const curriculum = ROBOT_FRAMEWORK_CURRICULUM;
            
            // Buscar en todas las secciones
            Object.values(curriculum.sections).forEach(section => {
                section.lessons.forEach(lesson => {
                    let score = 0;
                    let matchReason = '';
                    
                    // Buscar en t√≠tulo (mayor peso)
                    if (lesson.title.toLowerCase().includes(queryLower)) {
                        score += 10;
                        matchReason = 't√≠tulo';
                    }
                    
                    // Buscar en topics (peso medio) - INCLUYE PYCHARM
                    if (lesson.topics && lesson.topics.some(topic => 
                        topic.toLowerCase().includes(queryLower))) {
                        score += 5;
                        matchReason = matchReason ? `${matchReason}, topics` : 'topics';
                    }
                    
                    // Buscar por ID exacto (peso alto)
                    const lessonNumber = String(lesson.id).padStart(3, '0');
                    if (lessonNumber === queryLower || lesson.id.toString() === queryLower) {
                        score += 15;
                        matchReason = 'n√∫mero de lecci√≥n';
                    }
                    
                    // Buscar en descripci√≥n de secci√≥n (peso bajo)
                    if (section.title.toLowerCase().includes(queryLower) ||
                        section.description.toLowerCase().includes(queryLower)) {
                        score += 3;
                        matchReason = matchReason ? `${matchReason}, secci√≥n` : 'secci√≥n';
                    }
                    
                    // ‚úÖ NUEVA: B√∫squeda espec√≠fica para PyCharm y TortoiseGit QA
                    if ((queryLower.includes('pycharm') || queryLower.includes('plugin')) && 
                        (lesson.topics?.includes('pycharm') || lesson.topics?.includes('plugins'))) {
                        score += 12;
                        matchReason = matchReason ? `${matchReason}, PyCharm` : 'PyCharm';
                    }
                    
                    if ((queryLower.includes('tortoisegit') || queryLower.includes('git gui') || 
                         queryLower.includes('qa automation') || queryLower.includes('diff') || 
                         queryLower.includes('commit') || queryLower.includes('push')) && 
                        (lesson.topics?.includes('tortoisegit') || lesson.topics?.includes('git') || 
                         lesson.topics?.includes('qa-automation') || lesson.topics?.includes('diff-commit-push'))) {
                        score += 12;
                        matchReason = matchReason ? `${matchReason}, Git QA` : 'Git QA';
                    }
                    
                    // Si hay coincidencia, agregar a resultados
                    if (score > 0) {
                        results.push({
                            id: lesson.id,
                            title: lesson.title,
                            sectionTitle: section.title,
                            sectionIcon: section.icon,
                            sectionLevel: section.level,
                            score,
                            matchReason,
                            duration: lesson.duration,
                            hasCode: lesson.hasCode,
                            hasExercise: lesson.hasExercise
                        });
                    }
                });
            });
            
            // Ordenar por score descendente, luego por ID ascendente
            return results
                .sort((a, b) => {
                    if (b.score !== a.score) {
                        return b.score - a.score;
                    }
                    return a.id - b.id;
                })
                .slice(0, 20); // Limitar a 20 resultados
        },

        /**
         * ‚úÖ NUEVA: Obtiene metadatos v13.1 completos para una lecci√≥n
         */
        getV131Metadata(lessonId) {
            const lesson = this.getLessonById(lessonId);
            if (!lesson) return null;
            
            const level = lesson.sectionLevel;
            const type = lesson.type || 'standard';
            const key = `${level}-${type}`;
            const config = ROBOT_FRAMEWORK_CURRICULUM.config.v131Metadata;
            
            return {
                practiceRatio: config.practiceRatios[key] || 85,
                variables: config.variableRequirements[key] || 5,
                rfLines: config.rfLinesRequirements[key] || 30,
                commands: config.commandsRequirements[key] || 20,
                contentBlocks: config.contentBlocksRequirements[level] || 6,
                exerciseSteps: config.exerciseStepsRequirements[key] || 3,
                targetScore: config.targetScores[key] || 85,
                maxHeaderWords: config.maxHeaderWords || 5,
                lessonType: this.detectLessonType(lesson),
                detectedKey: key,
                isV131Compliant: true
            };
        },

        /**
         * ‚úÖ NUEVA: Detecta tipo de lecci√≥n usando algoritmo v13.1 EXACTO
         */
        detectLessonType(lesson) {
            const duration = parseInt(lesson.duration.split(' ')[0]);
            const topics = lesson.topics || [];
            const title = lesson.title.toLowerCase();
            const level = lesson.sectionLevel;

            // Keywords refinados v13.1 (SINCRONIZADOS con validador)
            const foundationKeywords = ['introducci√≥n', 'fundamentos', 'instalaci√≥n', 'setup', 'configuraci√≥n', 'conceptos b√°sicos', 'primeros pasos'];
            const integrationKeywords = ['proyecto', 'integrador', 'completo', 'capstone', 'ejercicio', 'implementaci√≥n', 'end-to-end'];
            const advancedKeywords = ['enterprise', 'arquitectura', 'patterns', 'avanzado'];
            
            const hasFoundation = foundationKeywords.some(kw => 
                title.includes(kw) || topics.some(topic => topic.includes(kw))
            );
            const hasIntegration = integrationKeywords.some(kw => 
                title.includes(kw) || topics.some(topic => topic.includes(kw))
            );
            const hasAdvanced = advancedKeywords.some(kw => 
                title.includes(kw) || topics.some(topic => topic.includes(kw))
            );

            // Algoritmo de detecci√≥n v13.1 EXACTO (SINCRONIZADO con validador)
            if (duration === 5) {
                return 'B√ÅSICO-EST√ÅNDAR';
            } else if (duration === 8) {
                return hasFoundation ? 'B√ÅSICO-FOUNDATION' : 'B√ÅSICO-EST√ÅNDAR';
            } else if (duration === 7) {
                return 'INTERMEDIO-EST√ÅNDAR';
            } else if (duration === 10) {
                if (level === 'beginner') {
                    return hasIntegration ? 'B√ÅSICO-INTEGRATION' : 'B√ÅSICO-FOUNDATION';
                }
                return hasAdvanced ? 'AVANZADO-EST√ÅNDAR' : 'INTERMEDIO-FOUNDATION';
            } else if (duration === 15) {
                if (level === 'intermediate') {
                    return hasIntegration ? 'INTERMEDIO-INTEGRATION' : 'INTERMEDIO-FOUNDATION';
                }
                return hasAdvanced ? 'AVANZADO-FOUNDATION' : 'AVANZADO-EST√ÅNDAR';
            } else if (duration >= 20) {
                if (level === 'beginner') return 'B√ÅSICO-CAPSTONE';
                if (level === 'intermediate') return 'INTERMEDIO-CAPSTONE';
                return 'AVANZADO-CAPSTONE';
            }

            return 'B√ÅSICO-EST√ÅNDAR';
        },

        /**
         * ‚úÖ NUEVA: Valida lecci√≥n individual contra umbrales v13.1
         */
        validateLessonV131(lessonId) {
            const metadata = this.getV131Metadata(lessonId);
            if (!metadata) return { valid: false, error: 'Lecci√≥n no encontrada' };
            
            const lesson = this.getLessonById(lessonId);
            const validation = {
                lessonId,
                title: lesson.title,
                detectedType: metadata.lessonType,
                v131Key: metadata.detectedKey,
                requirements: {
                    practiceRatio: `${metadata.practiceRatio}%+`,
                    variables: `${metadata.variables}+ variables RF \\\\\\\\$\\{VAR\\}`,
                    rfLines: `${metadata.rfLines}+ l√≠neas RF ejecutables`,
                    commands: `${metadata.commands}+ comandos verificables`,
                    contentBlocks: `${metadata.contentBlocks} content-blocks`,
                    exerciseSteps: `${metadata.exerciseSteps}+ exercise steps`,
                    maxHeaderWords: `‚â§${metadata.maxHeaderWords} palabras por header`,
                    targetScore: `${metadata.targetScore}%+ score objetivo`
                },
                compliance: {
                    duration: lesson.duration,
                    hasCode: lesson.hasCode,
                    hasExercise: lesson.hasExercise,
                    topics: lesson.topics?.length || 0,
                    hasType: !!lesson.type,
                    typeMatch: lesson.type === metadata.lessonType.toLowerCase().replace('b√°sico-', 'beginner-').replace('intermedio-', 'intermediate-').replace('avanzado-', 'advanced-').replace('est√°ndar', 'standard').replace('capstone', 'capstone').replace('integration', 'integration').replace('foundation', 'foundation')
                },
                recommendations: []
            };

            // Generar recomendaciones
            if (!validation.compliance.hasType) {
                validation.recommendations.push(`Agregar type: '${lesson.type || 'standard'}' en la lecci√≥n`);
            }
            if (!validation.compliance.typeMatch && lesson.type) {
                validation.recommendations.push(`Verificar type actual '${lesson.type}' vs detectado '${metadata.lessonType}'`);
            }
            if (validation.compliance.topics < 3) {
                validation.recommendations.push('Agregar m√°s topics para mejor categorizaci√≥n');
            }
            
            return validation;
        },

        /**
         * ‚úÖ NUEVA: Genera estad√≠sticas de cumplimiento v13.1 completas
         */
        getV131ComplianceStats() {
            const curriculum = ROBOT_FRAMEWORK_CURRICULUM;
            const stats = {
                total: 0,
                compliant: 0,
                nonCompliant: 0,
                byLevel: {
                    beginner: { total: 0, foundation: 0, integration: 0, capstone: 0, standard: 0 },
                    intermediate: { total: 0, foundation: 0, integration: 0, capstone: 0, standard: 0 },
                    advanced: { total: 0, foundation: 0, integration: 0, capstone: 0, standard: 0 }
                },
                byType: {
                    'foundation': 0,
                    'integration': 0,
                    'capstone': 0,
                    'standard': 0,
                    'undefined': 0
                },
                missingTypes: [],
                detectionResults: {},
                v131Alignment: {
                    perfectMatch: 0,
                    needsTypeUpdate: 0,
                    needsTopics: 0
                }
            };
            
            Object.values(curriculum.sections).forEach(section => {
                section.lessons.forEach(lesson => {
                    stats.total++;
                    const level = section.level;
                    stats.byLevel[level].total++;
                    
                    const detectedType = this.detectLessonType({
                        ...lesson,
                        sectionLevel: level
                    });
                    
                    stats.detectionResults[lesson.id] = {
                        title: lesson.title,
                        currentType: lesson.type,
                        detectedType: detectedType,
                        match: lesson.type === detectedType.toLowerCase().replace('b√°sico-', '').replace('intermedio-', '').replace('avanzado-', '').replace('est√°ndar', 'standard')
                    };
                    
                    const type = lesson.type || 'undefined';
                    if (stats.byType[type] !== undefined) {
                        stats.byType[type]++;
                    } else {
                        stats.byType['undefined']++;
                    }
                    
                    if (stats.byLevel[level][type] !== undefined) {
                        stats.byLevel[level][type]++;
                    }
                    
                    // An√°lisis v13.1
                    if (!lesson.type) {
                        stats.missingTypes.push({
                            id: lesson.id,
                            title: lesson.title,
                            level,
                            suggestedType: detectedType,
                            duration: lesson.duration
                        });
                        stats.v131Alignment.needsTypeUpdate++;
                    } else if (stats.detectionResults[lesson.id].match) {
                        stats.v131Alignment.perfectMatch++;
                        stats.compliant++;
                    } else {
                        stats.v131Alignment.needsTypeUpdate++;
                        stats.nonCompliant++;
                    }
                    
                    if (!lesson.topics || lesson.topics.length < 3) {
                        stats.v131Alignment.needsTopics++;
                    }
                });
            });
            
            stats.compliancePercentage = Math.round((stats.compliant / stats.total) * 100);
            stats.v131Score = Math.round(((stats.v131Alignment.perfectMatch / stats.total) * 100));
            
            return stats;
        },

        /**
         * ‚úÖ NUEVA: Genera reporte de migraci√≥n v13.1
         */
        generateV131MigrationReport() {
            const stats = this.getV131ComplianceStats();
            const report = {
                timestamp: new Date().toISOString(),
                version: 'v13.1-PyCharm',
                summary: {
                    total: stats.total,
                    compliant: stats.compliant,
                    needsWork: stats.nonCompliant + stats.missingTypes.length,
                    score: stats.v131Score
                },
                actions: {
                    addTypes: stats.missingTypes.length,
                    updateTypes: stats.v131Alignment.needsTypeUpdate - stats.missingTypes.length,
                    addTopics: stats.v131Alignment.needsTopics
                },
                recommendations: [],
                detailedActions: []
            };
            
            // Generar recomendaciones
            if (stats.missingTypes.length > 0) {
                report.recommendations.push(`Agregar property 'type' a ${stats.missingTypes.length} lecciones`);
            }
            
            if (stats.v131Alignment.needsTypeUpdate > stats.missingTypes.length) {
                report.recommendations.push(`Actualizar 'type' en ${stats.v131Alignment.needsTypeUpdate - stats.missingTypes.length} lecciones para mejor alineaci√≥n`);
            }
            
            if (stats.v131Alignment.needsTopics > 0) {
                report.recommendations.push(`Mejorar topics en ${stats.v131Alignment.needsTopics} lecciones (m√≠nimo 3 topics)`);
            }
            
            // Acciones detalladas para las primeras 10 lecciones que necesitan trabajo
            stats.missingTypes.slice(0, 10).forEach(lesson => {
                report.detailedActions.push({
                    lessonId: lesson.id,
                    title: lesson.title,
                    action: 'ADD_TYPE',
                    current: 'undefined',
                    suggested: lesson.suggestedType,
                    code: `type: '${lesson.suggestedType.toLowerCase().replace('b√°sico-', '').replace('intermedio-', '').replace('avanzado-', '').replace('est√°ndar', 'standard')}'`
                });
            });
            
            return report;
        },

        /**
         * Valida la integridad del curriculum con duraciones (MEJORADA)
         */
        validateDurations() {
            const curriculum = ROBOT_FRAMEWORK_CURRICULUM;
            const issues = [];
            const v131Issues = [];
            
            Object.values(curriculum.sections).forEach(section => {
                section.lessons.forEach(lesson => {
                    const duration = lesson.duration;
                    const level = section.level;
                    const type = lesson.type || 'standard';
                    
                    const expectedDuration = curriculum.utils.getSuggestedDuration(level, type);
                    
                    if (duration !== expectedDuration) {
                        issues.push({
                            lessonId: lesson.id,
                            title: lesson.title,
                            level,
                            type,
                            currentDuration: duration,
                            expectedDuration: expectedDuration
                        });
                    }
                    
                    // Validaci√≥n espec√≠fica v13.1
                    const metadata = curriculum.utils.getV131Metadata(lesson.id);
                    if (metadata) {
                        const detectedType = metadata.lessonType;
                        const currentTypeNormalized = lesson.type || 'standard';
                        
                        if (!detectedType.toLowerCase().includes(currentTypeNormalized)) {
                            v131Issues.push({
                                lessonId: lesson.id,
                                title: lesson.title,
                                currentType: currentTypeNormalized,
                                detectedType: detectedType,
                                suggestion: 'Revisar alineaci√≥n de tipo con algoritmo v13.1'
                            });
                        }
                    }
                });
            });
            
            return {
                isValid: issues.length === 0,
                issues,
                totalIssues: issues.length,
                v131Issues,
                v131Alignment: v131Issues.length === 0,
                v131Score: Math.round(((251 - v131Issues.length) / 251) * 100)
            };
        }
    }
};

// ‚úÖ FUNCIONES DE MIGRACI√ìN Y VERIFICACI√ìN v13.1
function migrateToV131() {
    console.log('üöÄ Iniciando migraci√≥n completa a v13.1-PyCharm...');
    
    const curriculum = ROBOT_FRAMEWORK_CURRICULUM;
    const report = curriculum.utils.generateV131MigrationReport();
    
    console.log(`\nüìä REPORTE DE MIGRACI√ìN v13.1-PyCharm:`);
    console.log(`   Total lecciones: ${report.summary.total}`);
    console.log(`   Compliance actual: ${report.summary.score}%`);
    console.log(`   Lecciones compliant: ${report.summary.compliant}`);
    console.log(`   Necesitan trabajo: ${report.summary.needsWork}`);
    
    console.log(`\nüîß ACCIONES REQUERIDAS:`);
    report.recommendations.forEach((rec, i) => {
        console.log(`   ${i + 1}. ${rec}`);
    });
    
    console.log(`\nüìù PRIMERAS ACCIONES DETALLADAS:`);
    report.detailedActions.forEach(action => {
        console.log(`   L${String(action.lessonId).padStart(3, '0')}: ${action.title}`);
        console.log(`      Agregar: ${action.code}`);
    });
    
    console.log(`\n‚úÖ Para completar la migraci√≥n:`);
    console.log(`   1. Agregar tipos faltantes a las lecciones`);
    console.log(`   2. Ejecutar validateV131Compliance() para verificar`);
    console.log(`   3. Usar Validador v13.1 para validaci√≥n completa`);
    console.log(`   4. ‚úÖ PyCharm configurado en lecciones 3, 4 y 5`);
    console.log(`   5. ‚úÖ Git + TortoiseGit para QA Engineers en lecci√≥n 11`);
    
    return report;
}

function validateV131Compliance() {
    console.log('üîç Validando compliance completo v13.1-PyCharm...');
    
    const curriculum = ROBOT_FRAMEWORK_CURRICULUM;
    const stats = curriculum.utils.getV131ComplianceStats();
    const duration = curriculum.utils.validateDurations();
    
    console.log(`\nüìä COMPLIANCE v13.1-PyCharm:`);
    console.log(`   Score general: ${stats.v131Score}%`);
    console.log(`   Lecciones perfectas: ${stats.v131Alignment.perfectMatch}/${stats.total}`);
    console.log(`   Necesitan tipo: ${stats.missingTypes.length}`);
    console.log(`   Duraciones correctas: ${duration.v131Score}%`);
    console.log(`   ‚úÖ PyCharm integrado en lecciones 3, 4 y 5`);
    console.log(`   ‚úÖ Git + TortoiseGit para QA Engineers en lecci√≥n 11`);
    
    console.log(`\nüìà POR NIVEL:`);
    Object.entries(stats.byLevel).forEach(([level, data]) => {
        console.log(`   ${level}: ${data.total} lecciones`);
        console.log(`      foundation: ${data.foundation} | integration: ${data.integration} | capstone: ${data.capstone}`);
    });
    
    if (stats.v131Score >= 95) {
        console.log(`\nüéâ ¬°EXCELENTE! Curriculum 95%+ compatible con v13.1-PyCharm`);
    } else if (stats.v131Score >= 85) {
        console.log(`\n‚úÖ BUENO: Curriculum compatible con v13.1-PyCharm, peque√±as mejoras disponibles`);
    } else {
        console.log(`\n‚ö†Ô∏è MEJORABLE: Ejecutar migrateToV131() para sugerencias espec√≠ficas`);
    }
    
    return {
        compliance: stats.v131Score,
        duration: duration.v131Score,
        overall: Math.round((stats.v131Score + duration.v131Score) / 2),
        ready: stats.v131Score >= 85 && duration.v131Score >= 85,
        pycharmIntegrated: true,
        tortoiseGitIntegrated: true
    };
}

// Disponibilidad global en browser con verificaci√≥n autom√°tica v13.1
if (typeof window !== 'undefined') {
    window.ROBOT_FRAMEWORK_CURRICULUM = ROBOT_FRAMEWORK_CURRICULUM;
    window.migrateToV131 = migrateToV131;
    window.validateV131Compliance = validateV131Compliance;
    
    console.log('‚úÖ ROBOT_FRAMEWORK_CURRICULUM v13.1-Enhanced-PyCharm loaded successfully');
    console.log(`üìä ${ROBOT_FRAMEWORK_CURRICULUM.config.totalLessons} lecciones con metadatos v13.1`);
    console.log('üîç Sistema completo v13.1: b√∫squeda, validaci√≥n, migraci√≥n');
    console.log('üéØ Prompt Maestro v13.1 + Validador v13.1 + Generador v13.1 SINCRONIZADOS');
    console.log('üíª ‚úÖ PYCHARM: Lecciones 3, 4 y 5 actualizadas para PyCharm');
    console.log('üîß ‚úÖ GIT QA: Lecci√≥n 11 optimizada para QA Engineers (Diff/Commit/Push)');
    
    // Verificaci√≥n autom√°tica de compliance v13.1
    setTimeout(() => {
        console.log('\nüöÄ VERIFICACI√ìN AUTOM√ÅTICA v13.1-PyCharm:');
        const compliance = validateV131Compliance();
        
        if (compliance.ready) {
            console.log('üü¢ CURRICULUM LISTO para Prompt Maestro v13.1 con PyCharm + Git QA');
        } else {
            console.log('üü° Ejecute migrateToV131() para mejoras espec√≠ficas');
        }
        
        console.log(`\nüí° Funciones disponibles:`);
        console.log(`   - migrateToV131() - Reporte de migraci√≥n`);
        console.log(`   - validateV131Compliance() - Verificaci√≥n completa`);
        console.log(`   - ROBOT_FRAMEWORK_CURRICULUM.utils.getV131Metadata(lessonId)`);
        console.log(`   - ROBOT_FRAMEWORK_CURRICULUM.utils.detectLessonType(lesson)`);
        console.log(`   - ‚úÖ searchLessons('pycharm') - Buscar lecciones PyCharm (L003, L004, L005)`);
        console.log(`   - ‚úÖ searchLessons('git qa') - Git para QA Engineers (L011)`);
        console.log(`   - ‚úÖ searchLessons('diff commit push') - Comandos Git QA (L011)`);
    }, 1000);
}

// Export para Node.js
if (typeof module !== 'undefined' && module.exports) {
    module.exports = ROBOT_FRAMEWORK_CURRICULUM;
}