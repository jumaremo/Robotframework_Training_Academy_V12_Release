/**
 * Robot Framework Academy - Lesson 007 OPTIMIZED
 * Configuraci√≥n del navegador web
 */

const LESSON_007 = {
    id: 7,
    title: "Configuraci√≥n del navegador web",
    duration: "5 min",
    level: "beginner",
    section: "section-01",
    type: "standard", // ‚úÖ AGREGADO
    content: `
        <h2>üåê Navegador Web</h2>
        <p>SeleniumLibrary controla navegadores autom√°ticamente.</p>
        
        <h3>ü§ñ Tests navegador:</h3>
        <pre><code class="robot">*** Settings ***
Library    SeleniumLibrary

*** Variables ***
\${CHROME_BROWSER}     chrome
\${FIREFOX_BROWSER}    firefox
\${EDGE_BROWSER}       edge
\${GOOGLE_URL}         https://www.google.com
\${GITHUB_URL}         https://github.com
\${WIKIPEDIA_URL}      https://wikipedia.org
\${EXPECTED_TITLE}     Google
\${WINDOW_WIDTH}       1920
\${WINDOW_HEIGHT}      1080

*** Test Cases ***
Test Chrome Browser
    [Documentation]    Valida configuraci√≥n Chrome
    Log    üåê Testing Chrome browser
    Open Browser       \${GOOGLE_URL}    \${CHROME_BROWSER}
    Maximize Browser Window
    Title Should Be    \${EXPECTED_TITLE}
    Page Should Contain    Google Search
    Should Contain     \${GOOGLE_URL}    google
    Close Browser
    Log    ‚úÖ Chrome funcionando correctamente

Test Firefox Browser
    [Documentation]    Valida configuraci√≥n Firefox
    Log    ü¶ä Testing Firefox browser
    Open Browser       \${GOOGLE_URL}    \${FIREFOX_BROWSER}
    Set Window Size    \${WINDOW_WIDTH}    \${WINDOW_HEIGHT}
    Title Should Be    \${EXPECTED_TITLE}
    Page Should Contain    Google
    Location Should Be    \${GOOGLE_URL}
    Close Browser
    Log    ‚úÖ Firefox funcionando correctamente

Test Edge Browser
    [Documentation]    Valida configuraci√≥n Edge
    Log    üî∑ Testing Edge browser
    Open Browser       \${GOOGLE_URL}    \${EDGE_BROWSER}
    Maximize Browser Window
    Title Should Be    \${EXPECTED_TITLE}
    Element Should Be Visible    name=q
    Page Should Contain Element    name=q
    Close Browser
    Log    ‚úÖ Edge funcionando correctamente

Test Multiple URLs
    [Documentation]    Prueba navegaci√≥n m√∫ltiples URLs
    Log    üîó Testing multiple URLs
    Open Browser       \${GOOGLE_URL}    \${CHROME_BROWSER}
    Title Should Be    \${EXPECTED_TITLE}
    Go To             \${GITHUB_URL}
    Title Should Contain    GitHub
    Go To             \${WIKIPEDIA_URL}
    Title Should Contain    Wikipedia
    Go Back
    Title Should Contain    GitHub
    Go Back
    Title Should Be    \${EXPECTED_TITLE}
    Close Browser
    Log    ‚úÖ Navegaci√≥n m√∫ltiple URLs OK

Test Browser Properties
    [Documentation]    Verifica propiedades del navegador
    Log    üîç Testing browser properties
    Open Browser       \${GOOGLE_URL}    \${CHROME_BROWSER}
    \${current_url}=    Get Location
    Should Be Equal    \${current_url}    \${GOOGLE_URL}
    \${title}=         Get Title
    Should Be Equal    \${title}    \${EXPECTED_TITLE}
    \${source}=        Get Source
    Should Contain     \${source}    Google
    Should Not Be Empty    \${source}
    Close Browser
    Log    ‚úÖ Propiedades browser verificadas

Test Window Management
    [Documentation]    Prueba gesti√≥n de ventanas
    Log    üñºÔ∏è Testing window management
    Open Browser       \${GOOGLE_URL}    \${CHROME_BROWSER}
    Maximize Browser Window
    \${size}=          Get Window Size
    Should Not Be Empty    \${size}
    Set Window Size    1024    768
    \${new_size}=      Get Window Size
    Should Contain     \${new_size}    1024
    Should Contain     \${new_size}    768
    Maximize Browser Window
    Close Browser
    Log    ‚úÖ Gesti√≥n ventanas OK</code></pre>
        
        <h3>üéØ Pr√°ctica navegador (4 min):</h3>
        <p>1. Instala SeleniumLibrary: pip install robotframework-seleniumlibrary</p>
        <p>2. Descarga ChromeDriver desde chromedriver.chromium.org</p>
        <p>3. Coloca chromedriver.exe en carpeta proyecto</p>
        <p>4. Crea archivo "browser_test.robot"</p>
        <p>5. Copia y pega c√≥digo tests navegador</p>
        <p>6. Ejecuta: robot browser_test.robot</p>
        <p>7. Observa Chrome abrirse autom√°ticamente</p>
        <p>8. Verifica todos tests PASS en report.html</p>
        <p>9. Prueba Firefox descargando geckodriver</p>
        <p>10. Modifica variables para diferentes URLs</p>
        <p>11. Experimenta con Set Window Size diferentes</p>
        <p>12. Agrega nuevos tests con otras p√°ginas web</p>
        <p>13. Valida que Title Should Be funciona correctamente</p>
        <p>14. Prueba navegaci√≥n Back y Forward</p>
        <p>15. Ejecuta todos los navegadores disponibles</p>

        <h3>üí° Tip</h3>
        <p>Si "chromedriver not found": agregar chromedriver a PATH</p>
        
        <h3>üöÄ Siguiente</h3>
        <p>Lecci√≥n 008: WebDrivers gesti√≥n dependencias</p>
    `,
    topics: ["selenium", "browser", "webdriver"],
    hasCode: true,
    hasExercise: true,
    type: "standard"
};