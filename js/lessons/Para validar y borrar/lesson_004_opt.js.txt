/**
 * Robot Framework Academy - Lesson 004 OPTIMIZED
 * Plugins esenciales para PyCharm
 */

const LESSON_004 = {
    id: 4,
    title: "Plugins esenciales para PyCharm",
    duration: "5 min",
    level: "beginner",
    section: "section-01",
    type: "standard", // ‚úÖ AGREGADO
    content: `
        <h2>üîå Plugins PyCharm</h2>
        <p>Plugins transforman PyCharm en m√°quina productividad RF.</p>
        
        <h3>ü§ñ Tests plugins:</h3>
        <pre><code class="robot">*** Variables ***
\${PLUGIN_RF}        Robot Framework
\${PLUGIN_PYTHON}    Python Community Edition
\${PLUGIN_YAML}      YAML/Ansible
\${PLUGIN_GIT}       Git
\${PLUGIN_TERMINAL}  Terminal
\${STATUS_OK}        installed
\${VERSION_CHECK}    --version

*** Test Cases ***
Verificar Plugin Robot Framework
    Log                 üîç Verificando plugin RF
    \${plugin_status}=   Set Variable    \${STATUS_OK}
    Should Be Equal     \${plugin_status}    \${STATUS_OK}
    Should Contain      \${PLUGIN_RF}    Robot
    Log                 ‚úÖ Plugin \${PLUGIN_RF} OK
    Should Be True      True

Verificar Plugin Python
    Log                 üêç Verificando Python plugin
    \${python_plugin}=   Set Variable    enabled
    Should Be Equal     \${python_plugin}    enabled
    Should Contain      \${PLUGIN_PYTHON}    Python
    Log                 ‚úÖ \${PLUGIN_PYTHON} habilitado
    Should Be True      True

Verificar Plugin YAML
    Log                 üìÑ Verificando YAML support
    \${yaml_support}=    Set Variable    active
    Should Be Equal     \${yaml_support}    active
    Should Contain      \${PLUGIN_YAML}    YAML
    Log                 ‚úÖ \${PLUGIN_YAML} funcionando
    Should Be True      True

Verificar Plugin Git
    Log                 üîß Verificando Git integration
    \${git_plugin}=      Set Variable    ready
    Should Be Equal     \${git_plugin}    ready
    Should Contain      \${PLUGIN_GIT}    Git
    Log                 ‚úÖ \${PLUGIN_GIT} integrado
    Should Be True      True

Verificar Plugin Terminal
    Log                 üíª Verificando Terminal
    \${terminal_ready}=  Set Variable    available
    Should Be Equal     \${terminal_ready}    available
    Should Contain      \${PLUGIN_TERMINAL}    Terminal
    Log                 ‚úÖ \${PLUGIN_TERMINAL} listo
    Should Be True      True

Test Funcionalidad Plugins
    Log                 üéØ Testing funcionalidad
    \${all_plugins}=     Set Variable    \${PLUGIN_RF}, \${PLUGIN_PYTHON}
    Should Contain      \${all_plugins}    Robot
    Should Contain      \${all_plugins}    Python
    Log                 ‚úÖ Todos plugins funcionando
    Should Be True      True
    Should Not Be Empty \${all_plugins}</code></pre>
        
        <h3>üéØ Pr√°ctica plugins (4 min):</h3>
        <p>1. Abre PyCharm ‚Üí File ‚Üí Settings ‚Üí Plugins</p>
        <p>2. Click Marketplace ‚Üí Busca "Robot Framework"</p>
        <p>3. Instala plugin "Robot Framework" ‚Üí Install</p>
        <p>4. Verifica "Python Community Edition" enabled</p>
        <p>5. Busca e instala "YAML/Ansible" plugin</p>
        <p>6. Confirma "Git" plugin enabled por defecto</p>
        <p>7. Habilita "Terminal" plugin si no est√°</p>
        <p>8. Click "Apply" ‚Üí "OK" ‚Üí Restart PyCharm</p>
        <p>9. Crea archivo "test.robot" ‚Üí Verifica colores syntax</p>
        <p>10. Escribe "Open Bro" ‚Üí Ve autocompletado "Open Browser"</p>
        <p>11. Right-click test.robot ‚Üí Ve opci√≥n "Run"</p>
        <p>12. Abre Terminal: View ‚Üí Tool Windows ‚Üí Terminal</p>
        <p>13. Ejecuta: robot --version ‚Üí Verifica output</p>
        <p>14. Settings ‚Üí Keymap ‚Üí Asigna F5 a "Run"</p>
        <p>15. Crea config.yaml ‚Üí Verifica syntax highlighting</p>

        <h3>üí° Tip</h3>
        <p>Plugin "Robot Framework" es esencial para syntax highlighting</p>
        
        <h3>üöÄ Siguiente</h3>
        <p>Lecci√≥n 005: Creaci√≥n primer proyecto</p>
    `,
    topics: ["plugins", "productividad"],
    hasCode: true,
    hasExercise: true,
    type: "standard"
};